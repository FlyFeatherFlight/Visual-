using ChicST_MM.IBLL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;

namespace ChicST_MM.WEB.Controllers
{
    public class BusinessTripController : Controller
    {
        private readonly IBusinessTripBLL businessTripBLL;
        private readonly IBusinessTrip_DetailsBLL businessTrip_DetailsBLL;
        private readonly IBusinessTrip_TypeBLL businessTrip_TypeBLL;
        private readonly IRegionBLL regionBLL;
        public BusinessTripController(IBusinessTripBLL businessTripBLL, IBusinessTrip_DetailsBLL businessTrip_DetailsBLL, IBusinessTrip_TypeBLL businessTrip_TypeBLL)
        {
            this.businessTripBLL = businessTripBLL;
            this.businessTrip_DetailsBLL = businessTrip_DetailsBLL;
            this.businessTrip_TypeBLL = businessTrip_TypeBLL;
        }

        // GET: BusinessTrip
        public ViewResult Index()
        {
            Session["View"] = true;
            return View();
        }

        public ViewResult AddBusinessTrip() {
            Session["View"] = true;
            return View();
        }

        public ViewResult AddBusinessTrip_Details(int id) {
            Session["View"] = true;
            return View();
        }

        [HttpPost]
        public ActionResult BusinessTripAdd() {
            if (Session["View"].ToString()=="false")
            {
                return Content ("<script>alert('重复操作！');parent.location.href='Index';</script>");
            }
            Session["View"] = false;
            return RedirectToAction("AddBusinessTrip_Details",new {id=0 });
        }

        [HttpPost]
        public ActionResult BusinessTrip_DetailsAdd() {
            if (Session["View"].ToString() == "false")
            {
                return Content("<script>alert('重复操作！');parent.location.href='Index';</script>");
            }
            Session["View"] = false;
            return RedirectToAction("Index");
        }

        /// <summary>
        /// 获取省
        /// </summary>
        /// <returns></returns>
        public JsonResult GetProvince() {
           var regions= regionBLL.GetModels(p => true).GroupBy(p =>p.省).Select(p=>p.FirstOrDefault());
  
            List<String> provinces = new List<String>();
            foreach (var item in regions)
            {
                provinces.Add(item.省);
            }
       
            return Json(provinces);

        }
        /// <summary>
        /// 获取市
        /// </summary>
        /// <returns></returns>
        public JsonResult GetRgion()
        {
            var regions = regionBLL.GetModels(p => true).ToList();
            return Json(regions);

        }


    }
}