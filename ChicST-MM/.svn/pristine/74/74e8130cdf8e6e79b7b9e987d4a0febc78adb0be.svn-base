using ChicST_MM.IBLL;
using ChicST_MM.WEB.Models;
using JPager.Net;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;


namespace ChicST_MM.WEB.Controllers
{
    /// <summary>
    /// 商务接待
    /// </summary>
    public class BusinessReceivingController : Controller
    {

        private readonly IBusinessReceptionBLL businessReceptionBLL;
        private readonly IBusinessReception_BudgetBLL businessReception_BudgetBLL;
        private readonly IBusinessReception_GuestBLL businessReception_GuestBLL;
        private readonly IBusinessReception_MattersBLL businessReception_MattersBLL;
        private readonly IBusinessReception_PlansBLL businessReception_PlansBLL;
        private readonly IAccountBLL accountBLL;
        private readonly IDistributorBLL distributorBLL;

        private readonly IStoreBLL storeBLL;
        private readonly IDepartmentBLL departmentBLL;
        private readonly IEmployeeInformationBLL employeeInformationBLL;

        public BusinessReceivingController(IBusinessReceptionBLL businessReceptionBLL, IBusinessReception_BudgetBLL businessReception_BudgetBLL, IBusinessReception_GuestBLL businessReception_GuestBLL, IBusinessReception_MattersBLL businessReception_MattersBLL, IBusinessReception_PlansBLL businessReception_PlansBLL, IAccountBLL accountBLL, IDistributorBLL distributorBLL, IStoreBLL storeBLL, IDepartmentBLL departmentBLL, IEmployeeInformationBLL employeeInformationBLL)
        {
            this.businessReceptionBLL = businessReceptionBLL;
            this.businessReception_BudgetBLL = businessReception_BudgetBLL;
            this.businessReception_GuestBLL = businessReception_GuestBLL;
            this.businessReception_MattersBLL = businessReception_MattersBLL;
            this.businessReception_PlansBLL = businessReception_PlansBLL;
            this.accountBLL = accountBLL;
            this.distributorBLL = distributorBLL;
            this.storeBLL = storeBLL;
            this.departmentBLL = departmentBLL;
            this.employeeInformationBLL = employeeInformationBLL;
        }




        // GET: ReceivingRecords
        /// <summary>
        /// 接待记录查询页
        /// </summary>
        /// <returns></returns>
        public ActionResult ReceivingRecordsIndex(string searchString, PagerInBase pagerInBase)
        {
            Session["View"] = true;
            //获得数据
            var models = BuildReceivingRecords(0).OrderByDescending(p => p.ID).ToList();
            //搜索数据
            var query = searchString != null ?
                models.Where(t => t.提交人.Contains(searchString)).ToList() :
                models.ToList();
            //默认倒叙排列

            query = query.OrderByDescending(p => p.ID).ToList();
            //分页数据
            var data = query.Skip(pagerInBase.Skip).Take(pagerInBase.PageSize);

            var count = models.Count;
            var res = new PagerResult<BusinessReceiving_RecordsViewModel>
            {
                Code = 0,
                DataList = data,
                Total = count,
                PageSize = pagerInBase.PageSize,
                PageIndex = pagerInBase.PageIndex,
                RequestUrl = pagerInBase.RequetUrl
            };
            return View(res);
        }


        /// <summary>
        /// 添加商务接待计划 视图
        /// </summary>
        /// <returns></returns>
        public ViewResult AddReceivingRecordsView()
        {
            Session["View"] = true;
            BusinessReceiving_RecordsViewModel businessReceiving_RecordsViewModel = new BusinessReceiving_RecordsViewModel();
            var ac = GetAccountInfo();
            businessReceiving_RecordsViewModel.申请人ID = ac.用户ID;
            businessReceiving_RecordsViewModel.申请人 = ac.姓名;
            businessReceiving_RecordsViewModel.部门 = employeeInformationBLL.GetModel(p=>p.用户ID==ac.用户ID).部门;
            return View(businessReceiving_RecordsViewModel);
        }

        /// <summary>
        /// 商务接待计划提交
        /// </summary>
        /// <param name="receivingRecordsViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult ReceivingRecordsAdd(BusinessReceiving_RecordsViewModel receivingRecordsViewModel)
        {
            if (Session["View"].ToString() == "false")
            {
                return Content("<script>alert('重复操作！');parent.location.href='ReceivingRecordsIndex';</script>");
            }
            var ac = GetAccountInfo();
            Session["View"] = false;
            营销_接待计划 model = new 营销_接待计划();
            model.主要沟通内容 = receivingRecordsViewModel.主要沟通内容;
            model.入住酒店 = receivingRecordsViewModel.入住酒店;
            model.抵达日期 = receivingRecordsViewModel.抵达日期;
            model.审核人ID = receivingRecordsViewModel.审核人ID;
            model.抵达日期 = receivingRecordsViewModel.抵达日期;
            model.提交人ID = ac.用户ID;
            model.提交日期 = DateTime.Now;
            model.更新人ID = ac.用户ID;
            model.更新日期 = DateTime.Now;
            model.申请人ID = receivingRecordsViewModel.申请人ID;
            model.申请日期 = DateTime.Now;
            model.离开日期 = receivingRecordsViewModel.离开日期;
            model.航班号 = receivingRecordsViewModel.航班号;
            model.费用总预算 = receivingRecordsViewModel.费用总预算;
            model.部门 = receivingRecordsViewModel.部门;
            model.配合部门 = receivingRecordsViewModel.配合部门;

            if (ModelState.IsValid)
            {
                model = businessReceptionBLL.AddReturnModel(model);
                Session["View"] = false;
            }

            else
            {
                List<string> sb = new List<string>();
                //获取所有错误的Key
                List<string> Keys = ModelState.Keys.ToList();
                //获取每一个key对应的ModelStateDictionary
                foreach (var key in Keys)
                {
                    var errors = ModelState[key].Errors.ToList();
                    //将错误描述添加到sb中
                    foreach (var error in errors)
                    {
                        sb.Add(error.ErrorMessage);
                    }
                }
                string msg = null;
                foreach (var item in sb)
                {
                    msg += item.ToString() + "<br/>";
                }
                return Content("<script>alert('" + msg + "');window.history.go(-1);</script>");
            }
            return Json( new { id = model.ID });
        }


        /// <summary>
        /// 商务接待计划修改
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public ActionResult ReceivingRecordsEdit(BusinessReceiving_RecordsViewModel receivingRecordsViewModel)
        {
            var ac = GetAccountInfo();
            var model = businessReceptionBLL.GetModel(p => p.ID == receivingRecordsViewModel.ID);
            model.主要沟通内容 = receivingRecordsViewModel.主要沟通内容;
            model.入住酒店 = receivingRecordsViewModel.入住酒店;
            model.抵达日期 = receivingRecordsViewModel.抵达日期;
            model.审核人ID = receivingRecordsViewModel.审核人ID;
            model.抵达日期 = receivingRecordsViewModel.抵达日期;
            model.更新人ID = ac.用户ID;
            model.更新日期 = DateTime.Now;
            model.申请人ID = receivingRecordsViewModel.申请人ID;
            model.申请日期 = DateTime.Now;
            model.离开日期 = receivingRecordsViewModel.离开日期;
            model.航班号 = receivingRecordsViewModel.航班号;
            model.费用总预算 = receivingRecordsViewModel.费用总预算;
            model.部门 = receivingRecordsViewModel.部门;
            model.配合部门 = receivingRecordsViewModel.配合部门;
            try
            {
                businessReceptionBLL.Modify(model);

            }
            catch (Exception e)
            {
                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "提交成功!" });
        }

        /// <summary>
        /// 商务接待计划明细提交
        /// </summary>
        /// <param name="businessReceiving_PlansViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_PlanAdd(BusinessReceiving_PlansViewModel businessReceiving_PlansViewModel)
        {
            var ac = GetAccountInfo();
            营销_接待计划明细 model = new 营销_接待计划明细();

            model.会谈地点 = businessReceiving_PlansViewModel.会谈地点;
            model.会谈重点项目 = businessReceiving_PlansViewModel.会谈重点项目;
            model.准备的资料 = businessReceiving_PlansViewModel.准备的资料;
            model.开始时间 = businessReceiving_PlansViewModel.开始时间;
            model.接待计划ID = businessReceiving_PlansViewModel.接待计划ID;
            model.提交人ID = ac.用户ID;
            model.提交日期 = DateTime.Now;
            model.日期 = businessReceiving_PlansViewModel.日期;
            model.更新人ID = ac.用户ID;
            model.更新日期 = DateTime.Now;
            model.结束时间 = businessReceiving_PlansViewModel.结束时间;
            model.行程项目 = businessReceiving_PlansViewModel.行程项目;
            model.车辆配备数 = businessReceiving_PlansViewModel.车辆配备数;
            model.陪同人员 = businessReceiving_PlansViewModel.陪同人员;
            try
            {
                model = businessReception_PlansBLL.AddReturnModel(model);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "提交成功!" ,data=model});

        }

        /// <summary>
        /// 商务接待计划明细修改操作
        /// </summary>
        /// <param name="businessReceiving_PlansViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_PlanEdit(BusinessReceiving_PlansViewModel businessReceiving_PlansViewModel)
        {
            var ac = GetAccountInfo();
            var model = businessReception_PlansBLL.GetModel(p => p.ID == businessReceiving_PlansViewModel.ID);

            model.会谈地点 = businessReceiving_PlansViewModel.会谈地点;
            model.会谈重点项目 = businessReceiving_PlansViewModel.会谈重点项目;
            model.准备的资料 = businessReceiving_PlansViewModel.准备的资料;
            model.开始时间 = businessReceiving_PlansViewModel.开始时间;
            model.日期 = businessReceiving_PlansViewModel.日期;
            model.更新人ID = ac.用户ID;
            model.更新日期 = DateTime.Now;
            model.结束时间 = businessReceiving_PlansViewModel.结束时间;
            model.行程项目 = businessReceiving_PlansViewModel.行程项目;
            model.车辆配备数 = businessReceiving_PlansViewModel.车辆配备数;
            model.陪同人员 = businessReceiving_PlansViewModel.陪同人员;
            try
            {
                businessReception_PlansBLL.Modify(model);
            }
            catch (Exception e)
            {
                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "修改成功!" });
        }

        /// <summary>
        /// 商务接待计划明细删除
        /// </summary>
        /// <param name="id">商务接待计划明细ID</param>
        /// <returns></returns>
        [HttpGet]
        public ActionResult BusinessRec_PlanDel(int id)
        {
            try
            {
                businessReception_PlansBLL.DelBy(p => p.ID == id);
            }
            catch (Exception e)
            {
                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "删除成功!" }, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 商务接待计划来宾信息提交
        /// </summary>
        /// <param name="businessReceiving_GuestViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_GuestAdd(营销_接待来宾信息 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
            //营销_接待来宾信息 model = new 营销_接待来宾信息();
            //model.备注 = businessReceiving_GuestViewModel.备注;
            //model.姓名 = businessReceiving_GuestViewModel.姓名;
            //model.性别 = businessReceiving_GuestViewModel.性别;
            //model.接待计划ID = businessReceiving_GuestViewModel.接待计划ID;
            //model.电话 = businessReceiving_GuestViewModel.电话;
            //model.身份 = businessReceiving_GuestViewModel.身份;
            try
            {
                model = businessReception_GuestBLL.AddReturnModel(model);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "提交成功!" , data = model });
        }

        /// <summary>
        /// 商务接待来宾信息修改
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_GuestEdit(营销_接待来宾信息 model)
        {

            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
            var m = businessReception_GuestBLL.GetModel(p=>p.ID==model.ID);
            m.备注 = model.备注;
            m.姓名 = model.姓名;
            m.性别 = model.性别;
            m.电话 = model.电话;
            m.身份 = model.身份;
            try
            {
                businessReception_GuestBLL.Modify(m);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "修改成功!", data = model });
        }

        /// <summary>
        /// 商务来宾信息删除
        /// </summary>
        /// <param name="id">商务来宾信息ID</param>
        /// <returns></returns>
        [HttpGet]
        public ActionResult BusinessRec_GuestDel(int id)
        {
            try
            {
                businessReception_GuestBLL.DelBy(p => p.ID == id);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "删除成功!" }, JsonRequestBehavior.AllowGet);

        }

        /// <summary>
        /// 商务来访会谈事项提交
        /// </summary>
        /// <param name="businessReceiving_MattersViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_MattersAdd(营销_接待来访主要事项 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
            //营销_接待来访主要事项 model = new 营销_接待来访主要事项();
            //model.主要问题 = businessReceiving_MattersViewModel.主要问题;
            //model.接待计划ID = businessReceiving_MattersViewModel.接待计划ID;
            //model.计划应对方案 = businessReceiving_MattersViewModel.计划应对方案;
            //model.需要的协助 = businessReceiving_MattersViewModel.需要的协助;
            //model.预计成果 = businessReceiving_MattersViewModel.预计成果;
            try
            {
                model = businessReception_MattersBLL.AddReturnModel(model);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "提交成功！", data = model });
        }

        /// <summary>
        /// 商务来访会谈事项修改操作
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_MattersEdit(营销_接待来访主要事项 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
           var m = businessReception_MattersBLL.GetModel(p=>p.ID==model.ID);
            m.主要问题 = model.主要问题;
           
            m.计划应对方案 = model.计划应对方案;
            m.需要的协助 = model.需要的协助;
            m.预计成果 = model.预计成果;
            try
            {
                businessReception_MattersBLL.Modify(m);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "修改成功！", data = model });
        }

        /// <summary>
        /// 商务会谈事项删除
        /// </summary>
        /// <param name="id">商务会谈事项ID</param>
        /// <returns></returns>
        [HttpGet]
        public ActionResult BusinessRec_MattersDel(int id)
        {
            try
            {
                businessReception_MattersBLL.DelBy(p => p.ID == id);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "删除成功！" },JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 商务接待预算提交
        /// </summary>
        /// <param name="businessReceiving_BudgetViewModel"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_BudgetAdd(营销_接待计划费用预估 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
            //营销_接待计划费用预估 model = new 营销_接待计划费用预估();
            //model.接待计划ID = businessReceiving_BudgetViewModel.接待计划ID;
            //model.摘要 = businessReceiving_BudgetViewModel.摘要;
            //model.时间 = businessReceiving_BudgetViewModel.时间;
            //model.金额预估 = businessReceiving_BudgetViewModel.金额预估;
            try
            {
                model = businessReception_BudgetBLL.AddReturnModel(model);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "提交成功！", data = model });
        }

        /// <summary>
        /// 商务接待预算修改
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult BusinessRec_BudgetEdit(营销_接待计划费用预估 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }
           var m = businessReception_BudgetBLL.GetModel(p=>p.ID==model.ID);
            m.接待计划ID = model.接待计划ID;
            m.摘要 = model.摘要;
            m.时间 = model.时间;
            m.金额预估 = model.金额预估;
            try
            {
                businessReception_BudgetBLL.Modify(m);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "修改成功！", data = model });
        }

        /// <summary>
        /// 商务接待预算删除
        /// </summary>
        /// <param name="id">商务接待预算ID</param>
        /// <returns></returns>
        [HttpGet]
        public ActionResult BusinessRec_BudgetDel(int id)
        {
            try
            {
                businessReception_BudgetBLL.DelBy(p => p.ID == id);
            }
            catch (Exception e)
            {

                return Json(new { success = false, msg = e.Message });
            }
            return Json(new { success = true, msg = "删除成功！" },JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 商务接待详情页
        /// </summary>
        /// <returns></returns>
        public ViewResult ReceivingRecords_DetailsView(int id, string role)
        {
            Session["View"] = true;

            var model = businessReceptionBLL.GetModel(p => p.ID == id);
            BusinessReceiving_RecordsViewModel receivingRecordsViewModel = new BusinessReceiving_RecordsViewModel();
            receivingRecordsViewModel = BuildReceivingRecord(model);

            ViewBag.Role = role;
            return View(receivingRecordsViewModel);
        }

        /// <summary>
        /// 商务接待详情修改视图
        /// </summary>
        /// <param name="id">商务接待ID</param>
        /// <returns></returns>
        public ActionResult ReceivingRecords_DetailsEditView() {

            return View();
        }

        /// <summary>
        /// 商务接待详情修改
        /// </summary>
        /// <param name="id">商务接待ID</param>
        /// <returns></returns>
        public ActionResult ReceivingRecords_DetailsEdit(int id) {
            var model = businessReceptionBLL.GetModel(p => p.ID == id);
            BusinessReceiving_RecordsViewModel receivingRecordsViewModel = new BusinessReceiving_RecordsViewModel();
            receivingRecordsViewModel = BuildReceivingRecord(model);
            return Json(receivingRecordsViewModel);
        }

        /// <summary>
        /// 接待记录审核
        /// </summary>
        /// <returns></returns>
        public ViewResult ReceivingRecords_CheckView(string searchString, PagerInBase pagerInBase)
        {
            Session["View"] = true;
            var models = BuildReceivingRecords(1).OrderByDescending(p => p.ID).ToList();
            //搜索数据
            var query = searchString != null ?
                models.Where(t => t.提交人.Contains(searchString)).ToList() :
                models.ToList();
            //默认倒叙排列
            query = query.OrderByDescending(p => p.ID).ToList();
            //分页数据
            var data = query.Skip(pagerInBase.Skip).Take(pagerInBase.PageSize);

            var count = models.Count;
            var res = new PagerResult<BusinessReceiving_RecordsViewModel>
            {
                Code = 0,
                DataList = data,
                Total = count,
                PageSize = pagerInBase.PageSize,
                PageIndex = pagerInBase.PageIndex,
                RequestUrl = pagerInBase.RequetUrl
            };
            return View(res);

        }

        /// <summary>
        /// 接待审核
        /// </summary>
        /// <param name="id">记录ID</param>
        /// <param name="checkString">审核状态</param>
        /// <returns></returns>
        public ActionResult CheckRecord(int id, string checkString)
        {
            var model = businessReceptionBLL.GetModel(p => p.ID == id);
            int n = int.Parse(checkString);
            if (model == null)
            {
                return Content("<script>alert('数据异常！');parent.location.href='ReceivingRecords_CheckView';</script>");
            }
            if (n == 0)
            {
                model.审核状态 = false;

            }
            if (n == 1)
            {
                model.审核状态 = true;

            }
            try
            {
                string[] property = new string[1];
                property[0] = "审批状态";
                businessReceptionBLL.Modify(model, property);
            }
            catch (Exception e)
            {

                throw e;
            }

            return RedirectToAction("ReceivingRecords_CheckView");
        }




        /// <summary>
        /// 获取关联审核人
        /// </summary>
        /// <returns></returns>
        public JsonResult GetAssociatedAuditor()
        {
            var models = GetCompanyStaff();
            if (models.Count() <= 0)
            {
                return Json("");
            }
            var tripObj = new ArrayList();
            foreach (var item in models)
            {

                var Auditor = new string[] { item.用户ID.ToString(), item.姓名 };
                tripObj.Add(Auditor);
            }
            return Json(tripObj);
        }

        /// <summary>
        /// 构造接待数据
        /// </summary>
        /// <param name="role"></param>
        /// <returns></returns>
        private List<BusinessReceiving_RecordsViewModel> BuildReceivingRecords(int role)
        {
            var ac = GetAccountInfo();
            List<营销_接待计划> models = new List<营销_接待计划>();
            if (role == 0)//查看自己提交
            {
                models = businessReceptionBLL.GetModels(p => p.提交人ID == ac.用户ID).ToList();
            }
            if (role == 1)//审核
            {
                models = businessReceptionBLL.GetModels(p => p.审核人ID == ac.用户ID).ToList();
            }
            List<BusinessReceiving_RecordsViewModel> receivingRecordsViewModels = new List<BusinessReceiving_RecordsViewModel>();
            BusinessReceiving_RecordsViewModel receivingRecordsViewModel = new BusinessReceiving_RecordsViewModel();
            foreach (var item in models)
            {
                receivingRecordsViewModel = BuildReceivingRecord(item);
                receivingRecordsViewModels.Add(receivingRecordsViewModel);
            }

            return receivingRecordsViewModels;

        }

        /// <summary>
        /// 构造单个接待数据
        /// </summary>
        /// <param name="id">接待ID</param>
        /// <returns></returns>
        private BusinessReceiving_RecordsViewModel BuildReceivingRecord(营销_接待计划 model)
        {
            if (model == null)
            {
                throw new ArgumentNullException(nameof(model));
            }

            BusinessReceiving_RecordsViewModel receivingRecord = new BusinessReceiving_RecordsViewModel();
            receivingRecord.ID = model.ID;
            receivingRecord.主要沟通内容 = model.主要沟通内容;
            receivingRecord.入住酒店 = model.入住酒店;
            receivingRecord.审核人ID = model.审核人ID;
            if (model.审核人ID != null)
            {
                receivingRecord.审核人 = employeeInformationBLL.GetModel(p => p.用户ID == model.审核人ID).姓名;

            }
            receivingRecord.审核状态 = model.审核状态;

            receivingRecord.抵达日期 = model.抵达日期;
            receivingRecord.提交人ID = model.提交人ID;
            receivingRecord.提交人 = employeeInformationBLL.GetModel(p => p.用户ID == model.提交人ID).姓名;
            receivingRecord.提交日期 = model.提交日期;
            receivingRecord.更新人ID = model.更新人ID.Value;
            receivingRecord.更新人 = employeeInformationBLL.GetModel(p => p.用户ID == model.更新人ID.Value).姓名;
            receivingRecord.更新日期 = model.更新日期.Value;
            receivingRecord.申请人ID = model.申请人ID;
            receivingRecord.申请人 = employeeInformationBLL.GetModel(p => p.用户ID == model.申请人ID).姓名;
            receivingRecord.申请日期 = model.申请日期;
            receivingRecord.离开日期 = model.离开日期;
            receivingRecord.航班号 = model.航班号;
            receivingRecord.费用总预算 = model.费用总预算;
            receivingRecord.部门 = model.部门;
            receivingRecord.配合部门 = model.配合部门;

            //List<营销_接待计划费用预估> budgetlis = new List<营销_接待计划费用预估>();
            var budgets = businessReception_BudgetBLL.GetModels(p => p.接待计划ID == model.ID);
            //foreach (var item in budgets)
            //{
            //    营销_接待计划费用预估 m = new 营销_接待计划费用预估();
            //    m.ID = item.ID;
            //    m.接待计划ID = item.接待计划ID;
            //    m.摘要 = item.摘要;
            //    m.时间 = item.时间;
            //    m.金额预估 = item.金额预估;
            //    budgetlis.Add(m);
            //}
            receivingRecord.营销_接待计划费用预估 = budgets.ToList();
            //List<营销_接待来宾信息> guestlis = new List<营销_接待来宾信息>();
            var guests = businessReception_GuestBLL.GetModels(p => p.接待计划ID == model.ID);
            receivingRecord.营销_接待来宾信息 = guests.ToList();
            //List<BusinessReceiving_MattersViewModel> matterslis = new List<BusinessReceiving_MattersViewModel>();
            //List<BusinessReceiving_PlansViewModel> planslis = new List<BusinessReceiving_PlansViewModel>();
            var matters = businessReception_MattersBLL.GetModels(p => p.接待计划ID == model.ID);
            receivingRecord.营销_接待来访主要事项 = matters.ToList();

            var plans = businessReception_PlansBLL.GetModels(p => p.接待计划ID == model.ID);
            receivingRecord.营销_接待计划明细 = plans.ToList();
            return receivingRecord;


        }

        /// <summary>
        /// 获取公司员工信息
        /// </summary>
        /// <returns></returns>
        private List<CompanyStaffViewModel> GetCompanyStaff()
        {
            List<CompanyStaffViewModel> companyStaffViewModel = new List<CompanyStaffViewModel>();

            var accounts = accountBLL.GetModels(p => true).ToList();
            var employees = employeeInformationBLL.GetModels(p => true).ToList();
            for (int i = 0; i < accounts.Count(); i++)
            {
                HR_人员信息表 m = new HR_人员信息表();
                try
                {
                    var id = accounts.ElementAt(i).ID;
                    m = employeeInformationBLL.GetModel(p => p.用户ID == id);
                }
                catch (Exception e)
                {

                    throw e;
                }
                CompanyStaffViewModel ac = new CompanyStaffViewModel();
                if (m != null)
                {
                    ac.ID = m.ID;
                    ac.上级部门 = m.上级部门;
                    ac.姓名 = m.姓名;
                    ac.岗位 = m.岗位;
                    ac.用户ID = m.用户ID;
                    ac.职级 = m.职级;
                    ac.部门 = m.部门;
                    companyStaffViewModel.Add(ac);
                }
            }
            return companyStaffViewModel;
        }

        /// <summary>
        /// 设置当前的用户信息
        /// </summary>
        private AcountInformation GetAccountInfo()
        {

            string userName = HttpContext.User.Identity.Name;
            if (userName != null)
            {

                var account = HttpContext.Session["Account"] as AcountInformation;
                return account;
            }
            else
            {
                return null;
            }

        }
    }
}